///*************************************************************************************/
///*************************************** 2018.4.14 ***********************************/
///*****************************          jerry zheng           ************************/
///**************************** beijing insititute of technology ***********************/
///*************************************************************************************/
//
////展示next_permutation(按照字典序列的下一个排列)，以及prev_permutation
////一个整型六位数字由『0，0，1，1，2，3』组成，编程显示它的全部序列
//
//#include "stdafx.h"
//
//int main()
//{
//	int a[] = { 0, 0, 1, 1, 3, 2 };
//	/*首先对数组进行升序排列*/
//	sort(a, a + 6);
//	/*保证最高位不是0，如果是0，则利用upper_bound寻找第一个大于0的迭代指针的位置，随后交换*/
//	if (a[0] == 0)
//	{
//		int *it = upper_bound(a, a + 6, 0);
//		swap(a[0], *it);
//	}
//	do 
//	{
//		copy(a, a + 6, ostream_iterator<int>(cout, "\t"));
//		cout << endl;
//	} while (next_permutation(a,a+6));
//
//	system("pause");
//	return 0;
//}
//
