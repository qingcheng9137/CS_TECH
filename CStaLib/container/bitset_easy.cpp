/*************************************************************************************/
/*************************************** 2018.4.10 ***********************************/
/*****************************          Jerry Zheng           ************************/
/**************************** Beijing Insititute of Technology ***********************/
/*************************************************************************************/

//其实我还没有理解这个容器
//对于位变量的简单操作实例

//#include "iostream"
//#include "string"
//#include "bitset"
//
//using namespace std;
//
//int main()
//{
//	bitset<5>s1;	//初始化一个至少具有5位的内存空间
//	cout << "初始内存空间内容:" << s1.to_string() << endl;
//	cout << "位容器空间(size):" << s1.size() << "\t置1个数(count):" << s1.count() << endl;
//
//	s1.set(2, true);		//将第2位置1
//	cout << "第2位置1后[set(2,true)]";
//	cout << "内存空间内容:" << s1.to_string() << endl;
//
//	s1[3] = 1;		//另一种设置位方式，相当于数组
//	cout << "第3位置1后[s1[3]=1]";
//	cout << "内存空间内容:" << s1.to_string() << endl;
//
//	s1.set();
//	cout << "所有位置1后[s1.set()]";
//	cout << "内存空间内容:" << s1.to_string() << endl;
//
//	bitset<16>s2(65535);
//	cout << "通过长整形数建立位容器:" << s2.to_string() << endl;
//	bitset<5>s3(string("1111101"), 2, 5);
//	cout << "通过字符串建立位容器:" << s3.to_string() << endl;
//	system("pause");
//	return 0;
//}