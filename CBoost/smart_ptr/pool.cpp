///*************************************************************************************/
///*************************************** 2018.4.18 ***********************************/
///*****************************          Jerry Zheng           ************************/
///**************************** Beijing Insititute of Technology ***********************/
///*************************************************************************************/
//
////pool很容易使用，像c中的malloc()一样分配内存，然后随意使用。除非特殊情况，否则不必对分配的内存free()
////pool会很好的管理内存
////pool只能作为普通数据类型比如int,double的内存池，不可以用于复杂的类和对象
//
//#define  BOOST_SYSTEM_NO_DEPRECATED	//避免链接boost.system库
//#include "boost/pool/pool.hpp"
//
//using namespace boost;
//
//int main()
//{
//	pool<>pl(sizeof(int));	//一个可以分配int的内存池
//	
//	int *p = static_cast<int*>(pl.malloc());	//必须把void*转换成需要的类型
//	assert(pl.is_from(p));
//
//	pl.free(p);	//释放内存池分配的内存
//	for (int ni = 0; ni < 100; ni++)	//连续分配大量内存
//	{
//		pl.ordered_malloc(10);
//	}	//内存池对象析构，所有分配的内存都在这里释放
//	
//	std::system("pause");
//	return 0;
//}